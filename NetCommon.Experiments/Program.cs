
using System.Text;
using BenchmarkDotNet.Attributes;
using BenchmarkDotNet.Engines;
using BenchmarkDotNet.Running;
using NetCommon.Buffers;
using NetCommon.Code;
using NetCommon.Code.Modifiers;
using NetCommon.Code.Modules;

#if RELEASE
var summary = BenchmarkRunner.Run<BenchmarkTest>();
#else
new BenchmarkTest().Run();
#endif

[SimpleJob(RunStrategy.Throughput, iterationCount: 2)]
[MinColumn, MaxColumn, MeanColumn, MedianColumn, MemoryDiagnoser]
public class BenchmarkTest
{
   [Benchmark]
   public string Run()
   {
      var builder = new CodeBuilder(
         stackalloc char[512],
         stackalloc char[16]);

      var nameSpace = builder.NameSpace;
      nameSpace.EnableNullable();
      nameSpace.AutoGeneratedComment();
      
      nameSpace.Using("System.Collections");
      nameSpace.Using("System.AA");
      nameSpace.Using("System.BB");

      var classes = builder.Class;
      classes.Create(out var mainClass);

      const ClassModifier test = ClassModifier.Abstract | ClassModifier.Unsafe;
      var testSize = test.GetCharBufferSize();
      Span<char> span = stackalloc char[testSize];
      test.FillCharBuffer(span);

      builder.Writer.WriteLine(span);

      builder.Dispose();
      
      return string.Empty;
   }
   
   [Benchmark]
   public string Run2()
   {
      var stringWriter = new StringBuilder();
      
      stringWriter.AppendLine("#nullable enable");
      stringWriter.AppendLine();
      stringWriter.AppendLine("#nullable enable");
      stringWriter.AppendLine();
      stringWriter.AppendLine($"using {"System.Collections"}");
      stringWriter.AppendLine($"using {"System.AA"}");
      stringWriter.AppendLine($"using {"System.BB"}");
      
      return string.Empty;
   }
}