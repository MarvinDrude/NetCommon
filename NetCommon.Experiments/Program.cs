
using System.Text;
using BenchmarkDotNet.Attributes;
using BenchmarkDotNet.Engines;
using NetCommon.Code;

#if RELEASE
var summary = BenchmarkRunner.Run<BenchmarkTest>();
#else
new BenchmarkTest().Run();
#endif

[SimpleJob(RunStrategy.Throughput, iterationCount: 2)]
[MinColumn, MaxColumn, MeanColumn, MedianColumn, MemoryDiagnoser]
public class BenchmarkTest
{
   [Benchmark]
   public string Run()
   {
      using var builder = new CodeBuilder(
         stackalloc byte[1024],
         stackalloc char[512],
         stackalloc char[16]);

      var nameSpace = builder.NameSpace;
      nameSpace.EnableNullable();
      nameSpace.AutoGeneratedComment();
      
      nameSpace.Using("System.Collections");
      nameSpace.Using("System.AA");
      nameSpace.Using("System.BB");

      var classes = builder.Class;

      
      
      // foreach (var current in span.DynamicSpan)
      // {
      //    Console.WriteLine(current.ToString());
      // }
      
      return string.Empty;
   }
   
   [Benchmark]
   public string Run2()
   {
      var stringWriter = new StringBuilder();
      
      stringWriter.AppendLine("#nullable enable");
      stringWriter.AppendLine();
      stringWriter.AppendLine("#nullable enable");
      stringWriter.AppendLine();
      stringWriter.AppendLine($"using {"System.Collections"}");
      stringWriter.AppendLine($"using {"System.AA"}");
      stringWriter.AppendLine($"using {"System.BB"}");
      
      return string.Empty;
   }
}
